#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Time_is_my_Companion
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="COMP10204_LAB5")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDOCTOR(DOCTOR instance);
    partial void UpdateDOCTOR(DOCTOR instance);
    partial void DeleteDOCTOR(DOCTOR instance);
    partial void InsertEPISODE(EPISODE instance);
    partial void UpdateEPISODE(EPISODE instance);
    partial void DeleteEPISODE(EPISODE instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Time_is_my_Companion.Properties.Settings.Default.COMP10204_LAB5ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<COMPANION> COMPANIONs
		{
			get
			{
				return this.GetTable<COMPANION>();
			}
		}
		
		public System.Data.Linq.Table<DOCTOR> DOCTORs
		{
			get
			{
				return this.GetTable<DOCTOR>();
			}
		}
		
		public System.Data.Linq.Table<EPISODE> EPISODEs
		{
			get
			{
				return this.GetTable<EPISODE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMPANION")]
	public partial class COMPANION
	{
		
		private string _NAME;
		
		private string _ACTOR;
		
		private int _DOCTORID;
		
		private string _STORYID;
		
		public COMPANION()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTOR", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ACTOR
		{
			get
			{
				return this._ACTOR;
			}
			set
			{
				if ((this._ACTOR != value))
				{
					this._ACTOR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTORID", DbType="Int NOT NULL")]
		public int DOCTORID
		{
			get
			{
				return this._DOCTORID;
			}
			set
			{
				if ((this._DOCTORID != value))
				{
					this._DOCTORID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORYID", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string STORYID
		{
			get
			{
				return this._STORYID;
			}
			set
			{
				if ((this._STORYID != value))
				{
					this._STORYID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCTOR")]
	public partial class DOCTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DOCTORID;
		
		private string _ACTOR;
		
		private int _SERIES;
		
		private int _AGE;
		
		private string _DEBUT;
		
		private System.Data.Linq.Binary _PICTURE;
		
		private EntityRef<EPISODE> _EPISODE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDOCTORIDChanging(int value);
    partial void OnDOCTORIDChanged();
    partial void OnACTORChanging(string value);
    partial void OnACTORChanged();
    partial void OnSERIESChanging(int value);
    partial void OnSERIESChanged();
    partial void OnAGEChanging(int value);
    partial void OnAGEChanged();
    partial void OnDEBUTChanging(string value);
    partial void OnDEBUTChanged();
    partial void OnPICTUREChanging(System.Data.Linq.Binary value);
    partial void OnPICTUREChanged();
    #endregion
		
		public DOCTOR()
		{
			this._EPISODE = default(EntityRef<EPISODE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTORID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DOCTORID
		{
			get
			{
				return this._DOCTORID;
			}
			set
			{
				if ((this._DOCTORID != value))
				{
					this.OnDOCTORIDChanging(value);
					this.SendPropertyChanging();
					this._DOCTORID = value;
					this.SendPropertyChanged("DOCTORID");
					this.OnDOCTORIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTOR", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ACTOR
		{
			get
			{
				return this._ACTOR;
			}
			set
			{
				if ((this._ACTOR != value))
				{
					this.OnACTORChanging(value);
					this.SendPropertyChanging();
					this._ACTOR = value;
					this.SendPropertyChanged("ACTOR");
					this.OnACTORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIES", DbType="Int NOT NULL")]
		public int SERIES
		{
			get
			{
				return this._SERIES;
			}
			set
			{
				if ((this._SERIES != value))
				{
					this.OnSERIESChanging(value);
					this.SendPropertyChanging();
					this._SERIES = value;
					this.SendPropertyChanged("SERIES");
					this.OnSERIESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGE", DbType="Int NOT NULL")]
		public int AGE
		{
			get
			{
				return this._AGE;
			}
			set
			{
				if ((this._AGE != value))
				{
					this.OnAGEChanging(value);
					this.SendPropertyChanging();
					this._AGE = value;
					this.SendPropertyChanged("AGE");
					this.OnAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEBUT", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string DEBUT
		{
			get
			{
				return this._DEBUT;
			}
			set
			{
				if ((this._DEBUT != value))
				{
					if (this._EPISODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEBUTChanging(value);
					this.SendPropertyChanging();
					this._DEBUT = value;
					this.SendPropertyChanged("DEBUT");
					this.OnDEBUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PICTURE", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PICTURE
		{
			get
			{
				return this._PICTURE;
			}
			set
			{
				if ((this._PICTURE != value))
				{
					this.OnPICTUREChanging(value);
					this.SendPropertyChanging();
					this._PICTURE = value;
					this.SendPropertyChanged("PICTURE");
					this.OnPICTUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODE_DOCTOR", Storage="_EPISODE", ThisKey="DEBUT", OtherKey="STORYID", IsForeignKey=true)]
		public EPISODE EPISODE
		{
			get
			{
				return this._EPISODE.Entity;
			}
			set
			{
				EPISODE previousValue = this._EPISODE.Entity;
				if (((previousValue != value) 
							|| (this._EPISODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPISODE.Entity = null;
						previousValue.DOCTORs.Remove(this);
					}
					this._EPISODE.Entity = value;
					if ((value != null))
					{
						value.DOCTORs.Add(this);
						this._DEBUT = value.STORYID;
					}
					else
					{
						this._DEBUT = default(string);
					}
					this.SendPropertyChanged("EPISODE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EPISODE")]
	public partial class EPISODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STORYID;
		
		private int _SEASON;
		
		private int _SEASONYEAR;
		
		private string _TITLE;
		
		private EntitySet<DOCTOR> _DOCTORs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTORYIDChanging(string value);
    partial void OnSTORYIDChanged();
    partial void OnSEASONChanging(int value);
    partial void OnSEASONChanged();
    partial void OnSEASONYEARChanging(int value);
    partial void OnSEASONYEARChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    #endregion
		
		public EPISODE()
		{
			this._DOCTORs = new EntitySet<DOCTOR>(new Action<DOCTOR>(this.attach_DOCTORs), new Action<DOCTOR>(this.detach_DOCTORs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORYID", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STORYID
		{
			get
			{
				return this._STORYID;
			}
			set
			{
				if ((this._STORYID != value))
				{
					this.OnSTORYIDChanging(value);
					this.SendPropertyChanging();
					this._STORYID = value;
					this.SendPropertyChanged("STORYID");
					this.OnSTORYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON", DbType="Int NOT NULL")]
		public int SEASON
		{
			get
			{
				return this._SEASON;
			}
			set
			{
				if ((this._SEASON != value))
				{
					this.OnSEASONChanging(value);
					this.SendPropertyChanging();
					this._SEASON = value;
					this.SendPropertyChanged("SEASON");
					this.OnSEASONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASONYEAR", DbType="Int NOT NULL")]
		public int SEASONYEAR
		{
			get
			{
				return this._SEASONYEAR;
			}
			set
			{
				if ((this._SEASONYEAR != value))
				{
					this.OnSEASONYEARChanging(value);
					this.SendPropertyChanging();
					this._SEASONYEAR = value;
					this.SendPropertyChanged("SEASONYEAR");
					this.OnSEASONYEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPISODE_DOCTOR", Storage="_DOCTORs", ThisKey="STORYID", OtherKey="DEBUT")]
		public EntitySet<DOCTOR> DOCTORs
		{
			get
			{
				return this._DOCTORs;
			}
			set
			{
				this._DOCTORs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOCTORs(DOCTOR entity)
		{
			this.SendPropertyChanging();
			entity.EPISODE = this;
		}
		
		private void detach_DOCTORs(DOCTOR entity)
		{
			this.SendPropertyChanging();
			entity.EPISODE = null;
		}
	}
}
#pragma warning restore 1591
